<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.article">

<!-- <resultMap type="com.spring.study.board.vo.AticleVo" id="articleResult">
	<result property="articleNo" column="ARTICLE_NO"/>
	<result property="parentNo" column="PARENT_NO"/>
	<result property="title" column="TITLE"/>
	<result property="content" column="CONTENT"/>
	<result property="writeDate" column="WRITE_DATE"/>
	<result property="writeMemberId" column="WRITE_MEMBER_ID"/> 
	<collection property="commentsList" column="ARTICLE_NO" javaType="java.util.ArrayList" ofType="articleReplyVo" select="getCommentListByArticleNo"/>
</resultMap> -->
<!-- 	
 	<select id="getCommentListByArticleNo" resultType="articleReplyVo">
		SELECT
  	    		  A.*
			FROM    (
  	          SELECT	ROWNUM as rNum
    	                ,LEVEL AS LVL
        	            , ARTICLE_NO
            	        , REPLY_NO
                	    , PARENT_NO
                    	, CONTENT
	                    , WRITE_MEMBER_ID
    	               
        	    FROM    ARTICLE_REPLY
            	START WITH
                	    PARENT_NO           = 0 
            	CONNECT BY
            	        PRIOR ARTICLE_NO    = PARENT_NO 
	            ORDER SIBLINGS BY
    	                ARTICLE_NO DESC
       			 ) A
       			 WHERE ARTICLE_NO in (
	       			 SELECT regexp_substr(#{articleNo}, '[^,]+', 1, LEVEL)
					FROM DUAL
					CONNECT BY LEVEL &lt;= length(regexp_replace(#{article_no}, '[^,]+', '')) + 1
       			 )
	</select>
 -->	
	
	<!-- <select id="listArticle2" resultMap="articleResult"> -->
	<select id="listArticle2" resultType="articleVo">
	<![CDATA[
	SELECT 	 X.*
             
 	FROM (
 			SELECT  /*+ INDEX_DESC(ARTICLE ARTICLE_NO)*/
 					ROWNUM AS RNUM
 				    , A.*      
         	 FROM (
         	 		SELECT    ARTICLE_NO
            				 , PARENT_NO
            				 , TITLE
           					 , CONTENT
           					 , WRITE_MEMBER_ID
            		 		 
            		FROM ARTICLE
            		ORDER BY ARTICLE_NO DESC
         	 	  ) A
 	 		 WHERE ROWNUM <= #{endNum}
 	 	  ) X
 	 WHERE   X.RNUM >= #{startNum}
 	 ]]>
	</select>
	<select id="listArticle" resultType="articleVo">
            SELECT	ROWNUM as rNum
                    ,LEVEL AS LVL
                    , ARTICLE_NO
                    , PARENT_NO
                    , TITLE
                    , CONTENT
                    , WRITE_MEMBER_ID
                    <!-- , WRITE_DATE -->
            FROM    ARTICLE
			WHERE   ARTICLE_NO > 0
            START WITH
                    PARENT_NO           = 0 
            CONNECT BY
                    PRIOR ARTICLE_NO    = PARENT_NO 
            ORDER SIBLINGS BY
                    ARTICLE_NO DESC
       		
	</select>
	
	<select id="viewArticle" parameterType="String" resultType="articleVo">
		SELECT 
				* 
		FROM 	ARTICLE 
		WHERE 	ARTICLE_NO = #{articleNo}
	</select>
	
	<insert id="insertArticle" parameterType="articleVo">
		INSERT INTO ARTICLE
		(
			ARTICLE_NO
			,PARENT_No
			,TITLE
			,CONTENT
			,WRITE_MEMBER_ID
		)
		VALUES
		(
			NO_SEQ.NEXTVAL
			,0
			,#{title}
			,#{content}
			,#{writeMemberId}
		)
	</insert>
	
	<update id="updateArticle" parameterType="articleVo">
		UPDATE ARTICLE
		SET
			TITLE		= #{title}
			,CONTENT	= #{content}
		WHERE
			ARTICLE_NO	= #{articleNo}
		AND	WRITE_MEMBER_ID = #{writeMemberId}
	</update>
	
	<select id="totalArticle" resultType="int">
		SELECT
				COUNT(1)
		FROM	ARTICLE
				
	</select>
	
	<select id="getSequence" resultType="int">
		SELECT 
				MAX(ARTICLE_NO)
		FROM 	ARTICLE
	</select>
	
	<delete id="deleteArticle" parameterType="String">
		DELETE 	
		FROM	ARTICLE
		WHERE	ARTICLE_NO = #{articleNo}
		AND		WRITE_MEMBER_ID = #{writeMemberId}
	
	</delete>
	
	<insert id="insertReply" parameterType="articleVo">
		<!-- <selectKey keyProperty="articleNo" resultType="int" order="BEFORE">
			SELECT
					NO_SEQ.NEXTVAL
			FROM	DUAL
		</selectKey> -->
			INSERT INTO ARTICLE
			(
				ARTICLE_NO
				,PARENT_NO
				,TITLE
				,CONTENT
				,WRITE_MEMBER_ID
			)
			VALUES
			(
				#{articleNo}
				,#{parentNo}
				,#{title}
				,#{content}
				,#{writeMemberId}
			)
	</insert>
	
	<select id="isArticleNo" parameterType="String" resultType="String">
		SELECT	 NVL(MIN('Y'), 'N')
		FROM 	DUAL
		WHERE	1			= 1
		AND		EXISTS
				(
					SELECT 
							1
					FROM	ARTICLE
					WHERE	
							ARTICLE_NO = #{articleNo}
				)
	</select>
	<!-- 아이디 체크 AOP를 위한 쿼리-->	
	<select id="equalsWriterId" parameterType="articleVo" resultType="String">
		SELECT	 NVL(MIN('Y'), 'N')
		FROM 	DUAL
		WHERE	1			= 1
		AND		EXISTS
				(
					SELECT 
							1
					FROM	ARTICLE
					WHERE	
							ARTICLE_NO = #{articleNo}
					AND		WRITE_MEMBER_ID = #{writeMemberId} 
				)
	</select>
	<select id="articleNo" resultType="String">
		SELECT
					NO_SEQ.NEXTVAL
			FROM	DUAL
	</select>
	
</mapper>
