<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.comment">
	<select id="listComment" parameterType="articleReplyVo" resultType="articleReplyVo">
		SELECT   A.*
        FROM      (
                      SELECT    
                                B.*
                     FROM     (
                                SELECT   ROW_NUMBER() OVER(PARTITION BY C.ARTICLE_ID  ORDER BY C.REPLY_ID DESC) AS RANK_NUMBER
                                        , LEVEL AS LVL
                                        , C.ARTICLE_ID
                                        , C.REPLY_ID
                                        , C.PARENT_ID
                                        , C.WRITE_MEMBER_ID
                                        , C.SECRET_TYPE_CD
                                        ,CASE   
                                             WHEN C.WRITE_MEMBER_ID = #{userId}  AND SECRET_TYPE_CD = 10 THEN C.CONTENT 
                                             WHEN D.WRITE_MEMBER_ID = #{userId}  AND SECRET_TYPE_CD = 10 THEN C.CONTENT
                                             ELSE     '비밀댓글'
                                         END AS CONTENT
                                FROM           ARTICLE_REPLY C
                                INNER   JOIN   ARTICLE D
                                ON C.ARTICLE_ID = D.ARTICLE_ID
                                WHERE    C.ARTICLE_ID in (
                                                            SELECT regexp_substr(#{articleId}, '[^,]+', 1, LEVEL)
                                                            FROM DUAL
                                                            CONNECT BY LEVEL &lt;= length(regexp_replace(#{articleId}, '[^,]+', '')) + 1
                                                        ) 
                                CONNECT BY
                                         PRIOR C.ARTICLE_ID   = C.PARENT_ID 
                              ) B
                    WHERE  B.RANK_NUMBER &lt;= #{endNum}
                              
                 ) A    
        WHERE  A.RANK_NUMBER &gt;= #{startNum}
	
	
	</select>
	<!-- 페이징 전 쿼리 -->
	<select id="listCommentNotPaging" parameterType="String" resultType="articleReplyVo">
		SELECT
  	    		  A.*
		FROM      (
  	                  SELECT	 LEVEL AS LVL
        	                   , ARTICLE_ID
            	        	   , REPLY_ID
	                           , PARENT_ID
                    		   , CONTENT
	                           , WRITE_MEMBER_ID
	                           , SECRET_CHK_FLAG
    	               
        	   		  FROM     ARTICLE_REPLY
       				  WHERE    ARTICLE_ID in (
	       										SELECT regexp_substr(#{articleId}, '[^,]+', 1, LEVEL)
												FROM DUAL
												CONNECT BY LEVEL &lt;= length(regexp_replace(#{articleId}, '[^,]+', '')) + 1
       			 						     )
            		START WITH
                			    PARENT_ID           = 0 
            		CONNECT BY
            	    		    PRIOR ARTICLE_ID    = PARENT_ID 
	            	ORDER SIBLINGS BY
    	            		    ARTICLE_ID DESC
       			 ) A
		<!-- WHERE   rNum BETWEEN (#{pageNum}-1)*10+1   AND (#{pageNum}-1)*10+10  -->
	
	
	</select>
	
	<select id="listComment2" parameterType="String" resultType="articleReplyVo">
	SELECT
  	    		  A.*
			FROM    (
  	          SELECT	ROWNUM as rNum
    	                ,LEVEL AS LVL
        	            , ARTICLE_ID
            	        , REPLY_ID
                	    , PARENT_ID
                    	, CONTENT
	                    , WRITE_MEMBER_ID
	                    ,SECRET_TYPE_CD
    	               
        	    FROM    ARTICLE_REPLY
            	START WITH
                	    PARENT_ID           = 0 
            	CONNECT BY
            	        PRIOR ARTICLE_ID    = PARENT_ID 
	            ORDER SIBLINGS BY
    	                ARTICLE_ID DESC
       			 ) A
       			 WHERE ARTICLE_ID = #{articleId}
	</select>
	
	<insert id="isExistComment">
		SELECT	 NVL(MIN('Y'), 'N')
		FROM 	DUAL
		WHERE	1			= 1
		AND		EXISTS
				(
					SELECT 
							1
					FROM	ARTICLE_REPLY
					WHERE	
							REPLY_ID = #{replyId}
				)
	</insert>
	
	<insert id="insertComment" parameterType="articleReplyVo">
		INSERT INTO ARTICLE_REPLY
		(
			REPLY_ID
			,ARTICLE_ID
			,PARENT_ID
			,CONTENT
			,WRITE_MEMBER_ID
			,SECRET_TYPE_CD
			
		)
		VALUES
		(
		 	 COMMENT_SEQ.NEXTVAL
		 	 ,#{articleId}
			 ,#{parentId}
			 ,#{content}
			 ,#{writeMemberId}
			 ,#{secretTypeCd}
			
		)
	
	</insert>
	
	
</mapper>
